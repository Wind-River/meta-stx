# We have a conf and classes directory, add to BBPATH
BBPATH .= ":${LAYERDIR}"

# We have recipes-* directories, add to BBFILES
BBFILES += "${LAYERDIR}/recipes-*/*/*.bb \
            ${LAYERDIR}/recipes-*/*/*.bbappend"

BBFILE_COLLECTIONS += "stx-layer"
BBFILE_PATTERN_stx-layer := "^${LAYERDIR}/"
BBFILE_PRIORITY_stx-layer = "5"

#DISTRO_FEATURES_append = " x11 opengl"
#EXTRA_IMAGE_FEATURES_append = " x11-base"
#VIRTUAL-RUNTIME_graphical_init_manager = "lxdm"

DISTRO_FEATURES_NATIVE_append += "systemd"
DISTRO_FEATURES_append += "systemd"

# INITRAMFS_IMAGE = "secure-core-image-initramfs"
#DISTRO_FEATURES_NATIVE_append += "systemd ima tpm tpm2 efi-secure-boot luks"
#DISTRO_FEATURES_append += "systemd ima tpm tpm2 efi-secure-boot luks"
#DISTRO_FEATURES_append += "systemd ima tpm tpm2 efi-secure-boot luks modsign"
#MACHINE_FEATURES_NATIVE_append += "efi"
#MACHINE_FEATURES_append += "efi"
#PACKAGE_CLASSES = "package_rpm"
#INHERIT += "sign_rpm_ext"

#INHERIT += " stx-postrun"
INHERIT += " extrausers-config"

EXTRA_USERS_PARAMS_CONFIG = "\
	useradd -p '' sysadmin; \
	groupadd sysadmin; \
	usermod -a -G sysadmin sysadmin; \
	useradd -p '' sysinv; \
	groupadd sysinv; \
	usermod -a -G sysinv sysinv; \
	useradd -p '' ceph; \
	groupadd ceph; \
	usermod -a -G ceph ceph; \
	useradd -p '' ldap; \
	groupadd ldap; \
	usermod -a -G ldap ldap; \
	useradd -p '' haproxy; \
	groupadd haproxy; \
	usermod -a -G haproxy haproxy; \
	useradd -p '' patching; \
	groupadd patching; \
	usermod -a -G patching patching; \
	useradd -p '' nfv; \
	groupadd nfv; \
	usermod -a -G nfv nfv; \
	useradd -p '' www; \
	groupadd www; \
	usermod -a -G www www; \
	groupadd sys_protected; \
	usermod -a -G sys_protected sysadmin; \
	usermod -a -G sys_protected sysinv; \
	usermod -a -G sys_protected www; \
	usermod -a -G sys_protected nfv; \
	usermod -a -G sys_protected patching; \
	usermod -a -G sys_protected haproxy; \
	"

EXTRA_IMAGE_FEATURES += " empty-root-password"
EXTRA_IMAGE_FEATURES += " allow-empty-password"
EXTRA_IMAGE_FEATURES += " allow-root-login"

#SECURE_CORE_IMAGE_EXTRA_INSTALL ?= "\
#    packagegroup-efi-secure-boot \
#    packagegroup-tpm \
#    packagegroup-tpm2 \
#    packagegroup-ima \
#    packagegroup-luks \
#    "

# For iso image
#KERNEL_FEATURES += "features/overlayfs/overlayfs.scc"

#INITRAMFS_SCRIPTS = "initramfs-live-boot \
#                     initramfs-live-install \
#		     initramfs-live-install-efi \
#		     "

LAYERDEPENDS_stx-layer = "\
	core \
	networking-layer \
	openembedded-layer \
	networking-layer \
	filesystems-layer \
	perl-layer \
	meta-python \
	webserver \
	virtualization-layer \
	cloud-services-layer \
	openstack-layer \
	openstack-aio-deploy-layer \
	openstack-compute-deploy-layer \
	openstack-controller-deploy-layer \
	openstack-qemu-layer \
	openstack-swift-deploy-layer \
"
# This should only be incremented on significant changes that will
# cause compatibility issues with other layers
LAYERVERSION_stx-version = "1"
LAYERSERIES_COMPAT_stx-layer = "thud warrior"

VIRTUAL-RUNTIME_init_manager = "systemd"
DISTRO_FEATURES_append = " systemd"
DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"

DISTRO_FEATURES_append = " bluez pam largefile opengl"
DISTRO_FEATURES_append = " virtualization"
DISTRO_FEATURES_append = " openstack"
# DISTRO_FEATURES_append = " selinux"
DISTRO_FEATURES_append = " kvm"

PREFERRED_PROVIDER_virtual/containerd = "containerd-opencontainers" 
PREFERRED_PROVIDER_virtual/kernel = "linux-yocto"

PREFERRED_VERSION_keyutils = "1.5.10"
PREFERRED_VERSION_python-voluptuous = "0.8.9"
PREFERRED_VERSION_python3-cherrypy = "18.2.0"
PREFERRED_VERSION_python-cheroot = "7.0.0"
PREFERRED_VERSION_python3-cheroot = "7.0.0"
PREFERRED_VERSION_python-cherrypy = "git"
PREFERRED_VERSION_pythonkeystoneauth1 = "3.17.1"
PREFERRED_VERSION_drbd-utils = "8.4.3rc1"
PREFERRED_VERSION_python-pyyaml = "3.13"
PREFERRED_VERSION_python-cmd2 = "0.6.8"
PREFERRED_VERSION_python-expect = "4.6.0"
PREFERRED_VERSION_python-pika = "0.10.0%"
PREFERRED_VERSION_python-keyring = "5.3"
PREFERRED_VERSION_python-barbican = "8.0.%"
PREFERRED_VERSION_python-keystone = "15.0.%"
PREFERRED_VERSION_python-flask = "1.0.2"
PREFERRED_VERSION_python-keystonemiddleware = "5.1.%"
PREFERRED_VERSION_python-oslo.cache= "1.26.%"
PREFERRED_VERSION_python-oslo.concurrency= "3.26.%"
PREFERRED_VERSION_python-oslo.log= "3.38.%"
PREFERRED_VERSION_python-oslo.middleware = "3.31.%"
PREFERRED_VERSION_python-oslo.policy = "1.43.%"
PREFERRED_VERSION_python-pysaml2 = "4.5.%"
PREFERRED_VERSION_python-sqlalchemy = "1.1.%"
PREFERRED_VERSION_python-werkzeug = "0.14.%"
PREFERRED_VERSION_python-neutronclient = "6.12.%"
PREFERRED_VERSION_python-oslo.i18n = "3.20.%"
PREFERRED_VERSION_python-iso8601 = "0.1.12"
PREFERRED_VERSION_python-six = "1.11.%"
PREFERRED_VERSION_python-docker = "3.3.0"
PREFERRED_VERSION_python-pyudev = "1.16.1"
PREFERRED_VERSION_python-django = "1.11.4"
PREFERRED_VERSION_docker-distribution = "v2.6.2"
PREFERRED_VERSION_kuberenetes = "1.16.%"
# PREFERRED_VERSION_python-horizon = "15.1.0"

# From meta-cloud-services TBD
# PREFERRED_VERSION_openldap = "2.4.39"

# Disable haproxy service by default
SYSTEMD_AUTO_ENABLE_pn-haproxy = "disable"

# Used by:
# neutron-init
# glance-init
CONTROLLER_IP = "127.0.0.1"
HELM_TOOL_KIT_VERSION = "0.1.0"
TIS_PATCH_VER = "7"
HELM_REPO = "stx-platform"
STX_REL = "19.12"
# INSTALLER_IMG_DIR = "/path/to/images"

VIRTUAL-RUNTIME_syslog = "syslog-ng"
VIRTUAL-RUNTIME_vim = "vim"


# Masked recipes:
BBMASK += "/meta-python2/recipes-core/images/meta-python-ptest-image.bb"
BBMASK += "/meta-python2/recipes-core/images/meta-python-image-base.bb"
BBMASK += "/meta-python2/recipes-core/images/meta-python-image.bb"
BBMASK += "/meta-starlingX/recipes-containers/kubernetes/kubernetes_git.bbappend"
